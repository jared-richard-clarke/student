* Non-Global Functions

*Programming in Lua*, Roberto Ierusalimschy

** ~local~ Syntax

When Lua compiles the call ~factorial(n - 1)~ in the function body, the local variable ~factorial~
is not yet defined. The call expression looks for the ~factorial~ definition in the outer
environment instead.

#+begin_src lua
  local function factorial (n)
      if n < 2 then
          return 1
      else
          return n * factorial(n - 1)
      end
  end

  -- expands ->

  local factorial -- The local variable must be defined before it is called.
  factorial = function (n)
      if n < 2 then
          return 1
      else
          return n * factorial(n - 1)
      end
  end
#+end_src

** Functions in Tables

#+begin_src lua
Library = {}

Library.add = function (x, y) return x + y end
Library.sub = function (x, y) return x - y end
Library.mul = function (x, y) return x * y end
Library.div = function (x, y) return x / y end

-- equivalent ->

Library = {}

function Library.add (x, y)
    return x + y
end
function Library.sub (x, y)
    return x - y
end
function Library.mul (x, y)
    return x * y
end
function Library.div (x, y)
    return x / y
end

-- equivalent ->

Library = {
    add = function (x, y) return x + y end
    sub = function (x, y) return x - y end
    mul = function (x, y) return x * y end
    div = function (x, y) return x / y end
}
#+end_src
