* Stack: Example Implementation

** Sources

| source                        | author                            |
|-------------------------------+-----------------------------------|
| *The Basics of C Programming* | Marshall Brain and Chris Pollette |

** Example

#+begin_src c
  #include "stack.h"
  #include <stdio.h>

  // Stack library implemented using a linked list

  struct stack
  {
      stack_data data;
      struct stack *next;
  };

  struct stack *top = NULL;

  void stack_init()
  // Initializes this library.
  // Call before calling anything else.
  {
      top = NULL;
  }

  void stack_clear()
  // Clears the stack of all entries.
  {
      stack_data x;

      while (!stack_empty())
          x = stack_pop();
  }

  int stack_empty()
  // Returns 1 if the stack is empty, 0 otherwise.
  {
      if (top == NULL)
          return (1);
      else
          return (0);
  }

  void stack_push(stack_data d)
  // Pushes the value "d" onto the stack.
  {
      struct stack *temp;
      temp = (struct stack *)malloc(sizeof(struct stack));
      temp->data = d;
      temp->next = top;
      top = temp;
  }

  stack_data stack_pop()
  // Returns the top element of the stack,
  // and removes that element.
  // Returns garbage if the stack is empty.
  {
      struct stack *temp;
      stack_data d = 0;
      if (top != NULL)
      {
          d = top->data;
          temp = top;
          top = top->next;
          free(temp);
      }
      return (d);
  }
#+end_src
